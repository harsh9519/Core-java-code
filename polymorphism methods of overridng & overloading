//program of polymorphism (overriding) program
//In this overriding they have identical methods in different classes
class B {
    
    void l()
    {
        System.out.println("parent");
    }
    void P(int i,String name)
    {
        System.out.println("name is"+name+"\n"+"number is"+i);
    }

}

class C extends B {
C()
{
    //super.l(); // this case the uper void l() print parent
    //at only one super is used at a time
    super.P(23,"sharmaji");
}

    void l()
    { 
        //super.l();// this case both print parents and child
        System.out.println("child");
    }
    void P(int i,String name)
    {
        System.out.println("name is"+name+"\n"+"number is"+i);
    }

    public static void main(String[] args) {
    
    
  2)  //program of polymorphism (overloading) program
//In this overriding they have identical methods but parameter are different classes
class A {
    
    void l()
    {
        System.out.println("A is called");
    }

}

class B extends A {


    void l(int i)
    {
        System.out.println("B is called " +i);
    }
}

class D extends B{
    void l(String name)
    {
        System.out.println("l is called"+name);
    }



    public static void main(String[] args) {
        
        D o=new D();
        o.l();
        o.l(34);
        o.l("harsh");
        
    }
}
        
        C o=new C();
        //o.l();
        o.P(12,"harsh sharma");
        
